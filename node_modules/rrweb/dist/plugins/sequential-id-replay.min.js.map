{"version":3,"file":"sequential-id-replay.min.js","sources":["../../../src/plugins/sequential-id/replay/index.ts"],"sourcesContent":["import type { SequentialIdOptions } from '../record';\nimport { ReplayPlugin, eventWithTime } from '../../../types';\n\ntype Options = SequentialIdOptions & {\n  warnOnMissingId: boolean;\n};\n\nconst defaultOptions: Options = {\n  key: '_sid',\n  warnOnMissingId: true,\n};\n\nexport const getReplaySequentialIdPlugin: (\n  options?: Partial<Options>,\n) => ReplayPlugin = (options) => {\n  const { key, warnOnMissingId } = options\n    ? Object.assign({}, defaultOptions, options)\n    : defaultOptions;\n  let currentId = 1;\n\n  return {\n    handler(event: eventWithTime) {\n      if (key in event) {\n        const id = ((event as unknown) as Record<string, number>)[key];\n        if (id !== currentId) {\n          console.error(\n            `[sequential-id-plugin]: expect to get an id with value \"${currentId}\", but got \"${id}\"`,\n          );\n        } else {\n          currentId++;\n        }\n      } else if (warnOnMissingId) {\n        console.warn(\n          `[sequential-id-plugin]: failed to get id in key: \"${key}\"`,\n        );\n      }\n    },\n  };\n};\n"],"names":["defaultOptions","key","warnOnMissingId","options","_a","Object","assign","currentId","handler","event","id","console","error","warn"],"mappings":"qDAOA,IAAMA,EAA0B,CAC9BC,IAAK,OACLC,iBAAiB,wCAKC,SAACC,GACb,IAAAC,EAA2BD,EAC7BE,OAAOC,OAAO,GAAIN,EAAgBG,GAClCH,EAFIC,QAAKC,oBAGTK,EAAY,EAEhB,MAAO,CACLC,QAAA,SAAQC,GACN,GAAIR,KAAOQ,EAAO,CAChB,IAAMC,EAAOD,EAA6CR,GACtDS,IAAOH,EACTI,QAAQC,MACN,kEAA2DL,yBAAwBG,QAGrFH,SAEOL,GACTS,QAAQE,KACN,4DAAqDZ"}